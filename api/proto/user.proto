syntax = "proto3";
package user;

import "id.proto";
import "subscription.proto";

message UserView {
    id.ObjectId id = 1;
    int64 tg_id = 2;
    UserNameView name = 3;
    RightsView rights = 4;
    optional string phone = 5;
    bool is_active = 6;
    optional FreezeView freeze = 7;
    repeated UserSubscriptionView subscriptions = 8;
    uint32 freeze_days = 9;
    optional EmployeeView employee = 12;
    optional SourceView come_from = 13;
    optional FamilyView family = 14;
}

message UserNameView {
    optional string tg_user_name = 1;
    string first_name = 2;
    optional string last_name = 3;
}

message FreezeView {
    int64 freeze_start = 1;
    int64 freeze_end = 2;
}

message UserSubscriptionView {
    id.ObjectId id = 1;
    id.ObjectId subscription_id = 2;
    string name = 3;
    uint32 items = 4;
    uint32 days = 5;
    StatusView status = 6;
    int64 price = 7;
    subscription.SubscriptionTypeView tp = 8;
    uint32 balance = 9;
    uint32 locked_balance = 10;
    bool unlimited = 11;
    optional int64 discount = 12;
    optional int64 item_price = 13;
}

message EmployeeView {
    EmployeeRoleView role = 1;
    string description = 2;
    int64 reward = 3;
    repeated RateView rates = 4;
}

enum SourceView {
    UNKNOWN = 0;
    WEBSITE = 1;
    INSTAGRAM = 2;
    VK = 3;
    YANDEX_MAP = 4;
    YANDEX_DIRECT = 5;
    DIRECT_ADDS = 6;
    VK_ADDS = 7;
    DOUBLE_GIS = 8;
    AVITO = 9;
    RECOMMENDATION = 10;
    OTHER = 11;
    WEB_SEARCH = 12;
    OLD_BASE = 13;
}

message FamilyView {
    bool is_individual = 2;
    optional UserView payer = 3;
    repeated UserView children = 5;
}

message RightsView {
    bool full = 1;
    repeated RuleView rights = 2;
}

enum RuleView {
    VIEW_PROFILE = 0;
    VIEW_USERS = 1;
    EDIT_USER_RIGHTS = 2;
    BLOCK_USER = 3;
    EDIT_USER_INFO = 4;
    EDIT_USER_SUBSCRIPTION = 5;
    FREEZE_USERS = 6;
    CHANGE_BALANCE = 7;
    EDIT_MARKETING_INFO = 8;
    EDIT_FAMILY = 9;
    VIEW_FAMILY = 10;
    EDIT_AI_PROMPT = 11;
    VIEW_USER_COMMENTS = 12;
    EDIT_USER_COMMENTS = 13;
    DELETE_USER_COMMENTS = 14;
    EDIT_TRAINING = 15;
    CREATE_TRAINING = 16;
    EDIT_TRAINING_CLIENTS_LIST = 17;
    SET_KEEP_OPEN = 18;
    SET_FREE = 19;
    EDIT_SCHEDULE = 20;
    CANCEL_TRAINING = 21;
    REMOVE_TRAINING = 22;
    EDIT_TRAINING_COUCH = 23;
    SCHEDULE_GROUP_TRAINING = 24;
    SCHEDULE_PERSONAL_TRAINING = 25;
    SCHEDULE_SUB_RENT = 26;
    SELECT_PERSONAL_INSTRUCTOR = 27;
    VIEW_ALL_TRAININGS = 28;
    CHANGE_TRAINING_SLOT = 29;
    CREATE_SUBSCRIPTION = 30;
    EDIT_SUBSCRIPTION = 31;
    SELL_SUBSCRIPTION = 32;
    FREE_SELL = 33;
    SUB_RENT = 34;
    VIEW_FINANCE = 35;
    MAKE_PAYMENT = 36;
    MAKE_DEPOSIT = 37;
    FINANCE_HISTORICAL_DATE = 38;
    DELETE_HISTORY = 39;
    VIEW_EMPLOYEES = 40;
    EDIT_EMPLOYEE = 41;
    EDIT_EMPLOYEE_RATES = 42;
    VIEW_LOGS = 43;
    CREATE_COUCH = 44;
    EDIT_COUCH = 45;
    VIEW_COUCH_RATES = 46;
    VIEW_STATISTICS = 47;
    SYSTEM = 48;
    VIEW_REWARDS = 49;
    RECALCULATE_REWARDS = 50;
    VIEW_MARKETING_INFO = 51;
    CREATE_REQUEST = 52;
    REQUESTS_HISTORY = 53;
    RECEIVE_NOTIFICATIONS_ABOUT_SUBSCRIPTIONS = 54;
    RECEIVE_NOTIFICATIONS_ABOUT_BIRTHDAYS = 55;
    RECEIVE_AI_NOTIFICATIONS = 56;
    MINI_APP = 57;
    BUY_SUBSCRIPTION = 58;
    VIEW_HIDDEN_PROGRAMS = 59;
    HISTORY_VIEWER = 60;
    AI_STATISTIC = 61;
    AI_USER_INFO = 62;
    SELECT_MODEL = 63;
}

enum EmployeeRoleView {
    COUCH = 0;
    MANAGER = 1;
    ADMIN = 2;
}

message RateView {
    oneof rate_type {
        FixRateView fix = 1;
        GroupTrainingRateView group_training = 2;
        PersonalTrainingRateView personal_training = 3;
    }
}

message FixRateView {
    int64 amount = 1;
    int64 next_payment_date = 2;
    IntervalView reward_interval = 3;
}

message GroupTrainingRateView {
    int64 percent = 1;
    int64 min_reward = 2;
}

message PersonalTrainingRateView {
    int64 percent = 1;
}

message IntervalView {
    uint32 month_num = 1;
}

message StatusView {
    oneof status_view {
        NotActive not_active = 1;
        ActiveStatusView active = 2;
    }
}

message NotActive {
}

message ActiveStatusView {
    int64 start_date = 1;
    int64 end_date = 2;
}
