events { }

http {
    # ДОБАВЬТЕ ЭТИ СТРОКИ для правильного определения MIME типов
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Дополнительные MIME типы для Flutter Web
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   epoch;
        application/javascript     epoch;
        ~image/                    1M;
    }

   server {
        listen 1313 ssl;
        server_name soulfamily.space;
        
        ssl_certificate /etc/ssl/certs/soulfamily.space.crt;      
        ssl_certificate_key /etc/ssl/certs/soulfamily.space.key;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        
        grpc_read_timeout 300;
        grpc_send_timeout 300;
        client_body_timeout 300;
        client_header_timeout 300;
        client_max_body_size 4M;

        location / {
            grpc_pass grpc://backend:3000;
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name soulfamily.space;

        ssl_certificate /etc/ssl/certs/soulfamily.space.crt;      
        ssl_certificate_key /etc/ssl/certs/soulfamily.space.key;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        gzip on;
        gzip_static on;
        gzip_min_length 256;
        gzip_comp_level 6;
        gzip_vary on;
        gzip_disable msie6;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types
            text/css
            text/javascript
            text/xml
            text/plain
            text/x-component
            application/javascript
            application/x-javascript
            application/json
            application/xml
            application/rss+xml
            application/atom+xml
            font/truetype
            font/opentype
            application/vnd.ms-fontobject
            image/svg+xml;

        location ~ /\.(ht|git|env|nginx) {
            deny all;
        }

        # Специальные правила для Flutter Web файлов
        location ~* \.(js)$ {
            root /bot-static/;
            add_header Content-Type application/javascript always;
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }

        location ~* \.(css)$ {
            root /bot-static/;
            add_header Content-Type text/css always;
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }

        location ~* \.(wasm)$ {
            root /bot-static/;
            add_header Content-Type application/wasm always;
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }

        location ~* \.(png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root /bot-static/;
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }

        # Для основных файлов приложения
        location / {
            root /bot-static/;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # Отключаем кэширование для разработки
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
        }
    }
    
    server {
        listen 80;
        server_name soulfamily.space;
        return 301 https://$server_name$request_uri;
    }
}