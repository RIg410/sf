events { }

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    server {
        listen 1313 ssl;
        server_name soulfamily.space;
        
        ssl_certificate /etc/ssl/certs/soulfamily.space.crt;      
        ssl_certificate_key /etc/ssl/certs/soulfamily.space.key;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        
        grpc_read_timeout 300;
        grpc_send_timeout 300;
        client_body_timeout 300;
        client_header_timeout 300;
        client_max_body_size 4M;

        location / {
            grpc_pass grpc://backend:3000;
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl http2; 
        server_name soulfamily.space;

        ssl_certificate /etc/ssl/certs/soulfamily.space.crt;      
        ssl_certificate_key /etc/ssl/certs/soulfamily.space.key;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        gzip on;
        gzip_static on;
        gzip_min_length 1024;
        gzip_comp_level 6;
        gzip_vary on;
        gzip_disable msie6;
        gzip_proxied any;
        gzip_types
            text/css
            text/javascript
            text/xml
            text/plain
            text/x-component
            application/javascript
            application/x-javascript
            application/json
            application/xml
            application/rss+xml
            application/atom+xml
            application/wasm
            font/truetype
            font/opentype
            application/vnd.ms-fontobject
            image/svg+xml;

        location ~ /\.(ht|git|env|nginx) {
            deny all;
        }

        location ~* \.js$ {
            root /bot-static/;
            add_header Content-Type application/javascript;
            
            # Для продакшена используйте кэширование:
            # expires 1y;
            # add_header Cache-Control "public, immutable";
            
            # Для разработки:
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        location ~* \.css$ {
            root /bot-static/;
            add_header Content-Type text/css;
            
            # Для продакшена:
            # expires 1y;
            # add_header Cache-Control "public, immutable";
            
            # Для разработки:
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        location ~* \.wasm$ {
            root /bot-static/;
            add_header Content-Type application/wasm;
            add_header Cross-Origin-Embedder-Policy require-corp;
            add_header Cross-Origin-Opener-Policy same-origin;
            
            # Для продакшена:
            # expires 1y;
            # add_header Cache-Control "public, immutable";
            
            # Для разработки:
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Изображения и шрифты
        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp)$ {
            root /bot-static/;
            
            # Для продакшена:
            # expires 1M;
            # add_header Cache-Control "public";
            
            # Для разработки:
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Шрифты
        location ~* \.(woff|woff2|ttf|eot|otf)$ {
            root /bot-static/;
            add_header Access-Control-Allow-Origin *;
            
            # Для продакшена:
            # expires 1y;
            # add_header Cache-Control "public, immutable";
            
            # Для разработки:
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        location ~* \.json$ {
            root /bot-static/;
            add_header Content-Type application/json;
            
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        location = /flutter_service_worker.js {
            root /bot-static/;
            add_header Content-Type application/javascript;
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        location / {
            root /bot-static/;
            index index.html;
            
            try_files $uri $uri/ @fallback;
            
            location ~* \.html$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
                
                add_header X-Frame-Options "SAMEORIGIN";
                add_header X-XSS-Protection "1; mode=block";
                add_header X-Content-Type-Options "nosniff";
                add_header Referrer-Policy "strict-origin-when-cross-origin";
            }
        }

        location @fallback {
            rewrite ^.*$ /index.html last;
        }

        location = / {
            root /bot-static/;
            try_files /index.html =404;
            
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Content-Type-Options "nosniff";
            add_header Referrer-Policy "strict-origin-when-cross-origin";
        }
    }
    
    server {
        listen 80;
        server_name soulfamily.space;
        return 301 https://$server_name$request_uri;
    }
}